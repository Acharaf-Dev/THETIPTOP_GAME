{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projet\\\\Nouveau dossier\\\\THETIPTOP_GAME\\\\frontend\\\\src\\\\components\\\\ProtectedRoute.jsx\";\nimport React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  const token = localStorage.getItem('token');\n  if (!token) {\n    // User not authenticated, redirect to login page\n    // You can also pass the intended destination via state\n    // so the login page can redirect back after successful login.\n    console.log('ProtectedRoute: No token found, redirecting to /login');\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n\n  // User is authenticated, render the requested component\n  // If children are provided, render them, otherwise render Outlet for nested routes\n  return children ? children : /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 32\n  }, this);\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","Outlet","jsxDEV","_jsxDEV","ProtectedRoute","children","token","localStorage","getItem","console","log","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Projet/Nouveau dossier/THETIPTOP_GAME/frontend/src/components/ProtectedRoute.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Navigate, Outlet } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  const token = localStorage.getItem('token');\r\n\r\n  if (!token) {\r\n    // User not authenticated, redirect to login page\r\n    // You can also pass the intended destination via state\r\n    // so the login page can redirect back after successful login.\r\n    console.log('ProtectedRoute: No token found, redirecting to /login');\r\n    return <Navigate to=\"/login\" replace />; \r\n  }\r\n\r\n  // User is authenticated, render the requested component\r\n  // If children are provided, render them, otherwise render Outlet for nested routes\r\n  return children ? children : <Outlet />;\r\n};\r\n\r\nexport default ProtectedRoute; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,IAAI,CAACF,KAAK,EAAE;IACV;IACA;IACA;IACAG,OAAO,CAACC,GAAG,CAAC,uDAAuD,CAAC;IACpE,oBAAOP,OAAA,CAACH,QAAQ;MAACW,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;;EAEA;EACA;EACA,OAAOX,QAAQ,GAAGA,QAAQ,gBAAGF,OAAA,CAACF,MAAM;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzC,CAAC;AAACC,EAAA,GAdIb,cAAc;AAgBpB,eAAeA,cAAc;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}