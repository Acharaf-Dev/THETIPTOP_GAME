{"ast":null,"code":"import React from\"react\";import{LineChart,Line,XAxis,YAxis,CartesianGrid,Tooltip,Legend,ResponsiveContainer}from\"recharts\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const UserActivityChart=_ref=>{let{users}=_ref;// Generate monthly activity data (simulated)\nconst generateActivityData=()=>{const currentMonth=new Date().getMonth();const months=[];for(let i=5;i>=0;i--){const month=new Date();month.setMonth(currentMonth-i);// If we have actual user data, we could calculate real signups per month\n// For now we'll generate simulated data\nconst monthName=month.toLocaleString(\"default\",{month:\"short\"});months.push({name:monthName,\"New Users\":Math.floor(Math.random()*15)+5,\"Active Users\":Math.floor(Math.random()*25)+15});}return months;};const data=generateActivityData();return/*#__PURE__*/_jsx(\"div\",{className:\"h-64\",children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:\"100%\",children:/*#__PURE__*/_jsxs(LineChart,{data:data,margin:{top:5,right:30,left:20,bottom:5},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"New Users\",stroke:\"#8884d8\",activeDot:{r:8},strokeWidth:2}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"Active Users\",stroke:\"#82ca9d\",strokeWidth:2})]})})});};export default UserActivityChart;","map":{"version":3,"names":["React","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsx","_jsx","jsxs","_jsxs","UserActivityChart","_ref","users","generateActivityData","currentMonth","Date","getMonth","months","i","month","setMonth","monthName","toLocaleString","push","name","Math","floor","random","data","className","children","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","type","stroke","activeDot","r","strokeWidth"],"sources":["C:/Users/achra/Desktop/tiptop/THETIPTOP_GAME/frontend/src/components/UserActivityChart.jsx"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\nconst UserActivityChart = ({ users }) => {\r\n  // Generate monthly activity data (simulated)\r\n  const generateActivityData = () => {\r\n    const currentMonth = new Date().getMonth();\r\n    const months = [];\r\n\r\n    for (let i = 5; i >= 0; i--) {\r\n      const month = new Date();\r\n      month.setMonth(currentMonth - i);\r\n\r\n      // If we have actual user data, we could calculate real signups per month\r\n      // For now we'll generate simulated data\r\n      const monthName = month.toLocaleString(\"default\", { month: \"short\" });\r\n\r\n      months.push({\r\n        name: monthName,\r\n        \"New Users\": Math.floor(Math.random() * 15) + 5,\r\n        \"Active Users\": Math.floor(Math.random() * 25) + 15,\r\n      });\r\n    }\r\n\r\n    return months;\r\n  };\r\n\r\n  const data = generateActivityData();\r\n\r\n  return (\r\n    <div className=\"h-64\">\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <LineChart\r\n          data={data}\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Line\r\n            type=\"monotone\"\r\n            dataKey=\"New Users\"\r\n            stroke=\"#8884d8\"\r\n            activeDot={{ r: 8 }}\r\n            strokeWidth={2}\r\n          />\r\n          <Line\r\n            type=\"monotone\"\r\n            dataKey=\"Active Users\"\r\n            stroke=\"#82ca9d\"\r\n            strokeWidth={2}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserActivityChart;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OACEC,SAAS,CACTC,IAAI,CACJC,KAAK,CACLC,KAAK,CACLC,aAAa,CACbC,OAAO,CACPC,MAAM,CACNC,mBAAmB,KACd,UAAU,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElB,KAAM,CAAAC,iBAAiB,CAAGC,IAAA,EAAe,IAAd,CAAEC,KAAM,CAAC,CAAAD,IAAA,CAClC;AACA,KAAM,CAAAE,oBAAoB,CAAGA,CAAA,GAAM,CACjC,KAAM,CAAAC,YAAY,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAC1C,KAAM,CAAAC,MAAM,CAAG,EAAE,CAEjB,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,EAAI,CAAC,CAAEA,CAAC,EAAE,CAAE,CAC3B,KAAM,CAAAC,KAAK,CAAG,GAAI,CAAAJ,IAAI,CAAC,CAAC,CACxBI,KAAK,CAACC,QAAQ,CAACN,YAAY,CAAGI,CAAC,CAAC,CAEhC;AACA;AACA,KAAM,CAAAG,SAAS,CAAGF,KAAK,CAACG,cAAc,CAAC,SAAS,CAAE,CAAEH,KAAK,CAAE,OAAQ,CAAC,CAAC,CAErEF,MAAM,CAACM,IAAI,CAAC,CACVC,IAAI,CAAEH,SAAS,CACf,WAAW,CAAEI,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAG,EAAE,CAAC,CAAG,CAAC,CAC/C,cAAc,CAAEF,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAG,EAAE,CAAC,CAAG,EACnD,CAAC,CAAC,CACJ,CAEA,MAAO,CAAAV,MAAM,CACf,CAAC,CAED,KAAM,CAAAW,IAAI,CAAGf,oBAAoB,CAAC,CAAC,CAEnC,mBACEN,IAAA,QAAKsB,SAAS,CAAC,MAAM,CAAAC,QAAA,cACnBvB,IAAA,CAACF,mBAAmB,EAAC0B,KAAK,CAAC,MAAM,CAACC,MAAM,CAAC,MAAM,CAAAF,QAAA,cAC7CrB,KAAA,CAACX,SAAS,EACR8B,IAAI,CAAEA,IAAK,CACXK,MAAM,CAAE,CACNC,GAAG,CAAE,CAAC,CACNC,KAAK,CAAE,EAAE,CACTC,IAAI,CAAE,EAAE,CACRC,MAAM,CAAE,CACV,CAAE,CAAAP,QAAA,eAEFvB,IAAA,CAACL,aAAa,EAACoC,eAAe,CAAC,KAAK,CAAE,CAAC,cACvC/B,IAAA,CAACP,KAAK,EAACuC,OAAO,CAAC,MAAM,CAAE,CAAC,cACxBhC,IAAA,CAACN,KAAK,GAAE,CAAC,cACTM,IAAA,CAACJ,OAAO,GAAE,CAAC,cACXI,IAAA,CAACH,MAAM,GAAE,CAAC,cACVG,IAAA,CAACR,IAAI,EACHyC,IAAI,CAAC,UAAU,CACfD,OAAO,CAAC,WAAW,CACnBE,MAAM,CAAC,SAAS,CAChBC,SAAS,CAAE,CAAEC,CAAC,CAAE,CAAE,CAAE,CACpBC,WAAW,CAAE,CAAE,CAChB,CAAC,cACFrC,IAAA,CAACR,IAAI,EACHyC,IAAI,CAAC,UAAU,CACfD,OAAO,CAAC,cAAc,CACtBE,MAAM,CAAC,SAAS,CAChBG,WAAW,CAAE,CAAE,CAChB,CAAC,EACO,CAAC,CACO,CAAC,CACnB,CAAC,CAEV,CAAC,CAED,cAAe,CAAAlC,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}